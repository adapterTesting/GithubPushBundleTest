{
  "metadata": {
    "name": "@itentialopensource/prebuilt-test",
    "version": "0.0.1",
    "description": "Description",
    "license": "Apache-2.0",
    "repository": {
      "type": "gitlab",
      "hostname": "gitlab.com",
      "path": "itentialopensource/pre-built-automations"
    },
    "keywords": [
      "Itential",
      "IAP",
      "artifacts"
    ],
    "author": "Itential Automation Platform",
    "IAPDependencies": {
      "@itential/app-workflow_engine": "9.6.32",
      "@itential/app-automation_catalog": "2.10.6"
    }
  },
  "manifest": {
    "bundleName": "@itentialopensource/prebuilt-test",
    "fingerprint": "60f719a0b23c000092f86ccc",
    "createdEpoch": "1626806688072",
    "artifacts": [
      {
        "id": "Test",
        "name": "Test",
        "type": "ac-agenda-job",
        "location": "/bundles/ac_agenda_jobs/Test.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Test",
        "name": "Test",
        "type": "workflow",
        "location": "/bundles/workflows/Test.json",
        "properties": {
          "entryPoint": false
        }
      }
    ]
  },
  "bundles": [
    {
      "type": "ac-agenda-job",
      "data": {
        "_id": "60ef2577285f7328b624f4b4",
        "name": "Test",
        "data": {
          "description": "",
          "workflowId": "Test",
          "formId": null,
          "formData": null,
          "gbac": {
            "write": [],
            "read": []
          },
          "lastUpdated": "2021-07-14T18:04:57.628Z",
          "modifiedById": "60a42ca0957f45d70745e15b",
          "modifiedByUsername": "admin@pronghorn"
        },
        "lastModifiedBy": "8df40c1db005:142",
        "lastRunAt": null,
        "nextRunAt": null,
        "priority": 0,
        "repeatInterval": null,
        "repeatTimezone": null,
        "type": "normal"
      }
    },
    {
      "type": "workflow",
      "data": {
        "type": "automation",
        "tasks": {
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.3867403314917127,
            "y": 0.3764861294583884
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.6082872928176796,
            "y": 0.42932628797886396
          },
          "9be3": {
            "name": "getEmojis",
            "canvasName": "getEmojis",
            "summary": "Lists all the emojis available to use on GitHub.",
            "description": "Lists all the emojis available to use on GitHub.",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "adapter_id": "adapter-github"
              },
              "outgoing": {
                "result": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "displayName",
                "highlightString": "<span class='highlight-string'>GitHub</span>"
              },
              {
                "key": "summary",
                "highlightString": "Lists all the emojis available to use on <span class='highlight-string'>GitHub</span>."
              },
              {
                "key": "description",
                "highlightString": "Lists all the emojis available to use on <span class='highlight-string'>GitHub</span>."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5114791954419889,
            "y": 0.511889035667107
          },
          "2bb7": {
            "name": "getOrgsOrg",
            "canvasName": "getOrgsOrg",
            "summary": "Get an Organization.",
            "description": "Get an Organization.",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "org": "adapterTesting",
                "adapter_id": "adapter-github"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>get</span>OrgsOrg"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Get</span> an <span class='highlight-string'>Organization</span>."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Get</span> an <span class='highlight-string'>Organization</span>."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5149171270718232,
            "y": 0.3579920739762219,
            "scheduled": false
          },
          "455b": {
            "name": "getNotifications",
            "canvasName": "getNotifications",
            "summary": "List your notifications.\nList all notifications for the current user, grouped by repository.",
            "description": "List your notifications.\nList all notifications for the current user, grouped by repository.",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "all": "",
                "participating": "",
                "since": "",
                "adapter_id": "adapter-github"
              },
              "outgoing": {
                "result": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>get</span>Notifications"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5298342541436464,
            "y": 0.14134742404227213
          }
        },
        "transitions": {
          "workflow_start": {
            "9be3": {
              "type": "standard",
              "state": "success"
            },
            "2bb7": {
              "type": "standard",
              "state": "success"
            },
            "455b": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "9be3": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "2bb7": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "455b": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "name": "Test",
        "description": "",
        "last_updated": "2021-07-20T15:33:03.887Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "lastUpdatedVersion": "5.40.5-2021.1.8.0",
        "inputSchema": {
          "type": "object"
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            }
          }
        },
        "created": "2021-07-14T18:04:24.213Z",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false,
          "email": ""
        },
        "createdVersion": "5.29.14-2020.2.47.0",
        "tags": [],
        "groups": []
      }
    }
  ],
  "readme": "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n\n<!-- Update the below line with your Pre-Built name -->\n# Pre-Built Name\n\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [Future Enhancements](#future-enhancements)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n* [Additional Information](#additional-information)\n\n## Overview\n\n<!-- Write a few sentences about the Pre-Built and explain the use case(s) -->\n<!-- Avoid using the word Artifact. Please use Pre-Built, Pre-Built Transformation or Pre-Built Automation -->\n<!-- Ex.: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments -->\n<!-- (e.g. from Dev to Pre-Production or from Lab to Production). -->\n\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitLab -->\n<!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW -->\n<!--\n<table><tr><td>\n  <img src=\"adapterTesting/GithubPushBundleTest/-/raw/refs/heads/patch_2021-07-20T13-44-56/images/workflow.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n-->\n<!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->\n\n<!-- ADD ESTIMATED RUN TIME HERE -->\n<!-- e.g. Estimated Run Time: 34 min. -->\n_Estimated Run Time_:\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n<!-- Include any other required apps or adapters in this list -->\n<!-- Ex.: EC2 Adapter -->\n* Itential Automation Platform\n  * `^2021.1`\n\n## Requirements\n\nThis Pre-Built requires the following:\n\n<!-- Unordered list highlighting the requirements of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * cisco ios device -->\n<!-- * Ansible or NSO (with F5 NED) * -->\n\n## Features\n\nThe main benefits and features of the Pre-Built are outlined below.\n\n<!-- Unordered list highlighting the most exciting features of the Pre-Built -->\n<!-- EXAMPLE -->\n<!-- * Automatically checks for device type -->\n<!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n\n\n## Future Enhancements\n\n<!-- OPTIONAL - Mention if the Pre-Built will be enhanced with additional features on the road map -->\n<!-- Ex.: This Pre-Built would support Cisco XR and F5 devices -->\n\n## How to Install\n\nTo install the Pre-Built:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section in order to install the Pre-Built. \n* The Pre-Built can be installed from within App-Admin_Essential. Simply search for the name of your desired Pre-Built and click the install button (as shown below).\n\n<!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n<!--\n<table><tr><td>\n  <img src=\"adapterTesting/GithubPushBundleTest/-/raw/refs/heads/patch_2021-07-20T13-44-56/images/install.png\" alt=\"install\" width=\"600px\">\n</td></tr></table>\n-->\n<!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED PRE-BUILT -->\n\n<!-- OPTIONAL - Explain if external components are required outside of IAP -->\n<!-- Ex.: The Ansible roles required for this Pre-Built can be found in the repository located at https://gitlab.com/itentialopensource/pre-built-automations/hello-world -->\n\n## How to Run\n\nUse the following to run the Pre-Built:\n\n<!-- Explain the main entrypoint(s) for this Pre-Built: Automation Catalog item, Workflow, Postman, etc. -->\n\n## Additional Information\n\nPlease use your Itential Customer Success account if you need support when using this Pre-Built.\n"
}